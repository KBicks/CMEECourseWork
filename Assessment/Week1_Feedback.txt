Starting weekly assessment for Katherine, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 4.24 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week6, Week1, Week7, Assessment, Week5, Week2, Week9, Week4, .git, Miniproject, Week3, Project

Found the following files in parent directory: .gitignore, readme.md

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
*.pcy
__pycache__
*.Rhistory
*.gz
*.aux
*.log
*.blg
*.bbl
**********************************************************************

Found README in parent directory, named: readme.md

Printing contents of readme.md:
**********************************************************************
### CMEE Coursework Repository 2018/19 README
  
*Author:* Katie Bickerton
  
*Contents:*  
**Week{1-9}** - exercises from the taught content of the course.  
**Miniproject** - script and data files for the CMEE mini-project, (this is also the week 8 directory).  
**Project** - script and data files for the 9 month research project.  
**Assessment** - feedback on the taught content from the assessor.  
**.gitignore** - file types within the home directory but not kept under version control.  **********************************************************************

======================================================================
Looking for the weekly directories...

Found 8 weekly directories: Week1, Week2, Week3, Week4, Week5, Week6, Week7, Week9

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox, Results

Found the following files: readme.md

Checking for readme file in weekly directory...

Found README in parent directory, named: readme.md

Printing contents of readme.md:
**********************************************************************
### CMEE Coursework Week 1 README

*Introduction:* This directory contains coursework files from week 1 of the CMEE course. This week included an introduction to Unix, shell scripting in bash, introduction to github, and compiling pdf files using LaTeX.
  
    
*Contents:* There are four directories:
1. **Code** - script files in bash and LaTeX.
2. **Data** - data used to test script files and referred to within some scripts.
3. **Results** - location for output files produced by script files.
4. **Sandbox** - practise and test files.
  
  
*Code File Descriptions:*

Unix Practical:  
**UnixPrac1.txt** - solutions to unix practical tasks.  

Shell Scripting:  
**boilerplate.sh** - A simple boilerplate exemplifying shell scripting.  
**tabtocsv.sh** - Converts a tab delimited file to a comma delimited file (.csv) via substitution of tabs for commas, file required in the command line.  
**variables.sh** - Exemplifies setting variables within the script and from the terminal.  
**MyExampleScript.sh** - Exemplifies setting variables and returning within a string.  
**CountLines.sh** - Counts lines in input file, file required from the command line.  
**ConcatenateTwoFiles.sh** Merge two files input from the terminal, with resulting file name specified in the command line.  
**tiff2png.sh** - Converts tiff files to png files, using a for loop and imagemagick, .tif file required from command line.  
Shell Scripting Practical:  
**csvtospace.sh** - Convert comma to space delimited files, via substitution of commas for spaces, .csv file specified in the command line.  

LaTeX:  
**FirstExample.tex** - example LaTeX file for compiling a pdf.  
**FirstBiblio.bib** - example bibliography file.  
LaTeX Practical:  
**CompileLaTeX.sh** - Compiles a pdf document (with bibliography) from a .tex file, file name (without file extension) required from the command line.  **********************************************************************

Found following files in results directory: readme.md...

Found 12 code files: ConcatenateTwoFiles.sh, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: Merge two files input from the terminal, with resulting file name
# specified in the command line.
# Arguments: 1,2-> files to be merged, 3-> output file, all specified in the 
# command line.
# Date: 07 Oct 2018

# copies contents of file 1 onto new file 3 using >
cat $1 > $3
# appends file 3 with contents of file 2, using >> 
# which prevents overwritting other content 
cat $2 >> $3
echo "Merged File is"
# returns contents of merged file
cat $3

exit**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 11: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 14: $3: ambiguous redirect

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton@imperial.ac.uk
# Script: CountLines.sh
# Desc: Counts lines in input file, file required from the command line.
# Arguments: NumLines -> Integer (line count value), 1-> file (from terminal)
# Date: 07 Oct 2018

# counts lines within file input from the command line
NumLines=`wc -l < $1`
# returns the result of the count, set to argument "Numlines"
echo "The file $1 has $NumLines lines"
echo

exit **********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error:
CountLines.sh: line 9: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: variables.sh
# Desc: Exemplifies setting variables within the script and from the terminal.
# Arguments: MyVar -> alphanumeric string, a,b,mysum-> numerical
# Date: 07 Oct 2018

# Shows use of variables
# Set intial value of variable
MyVar='some string'
# returns value of variable
echo 'the current value of the variable is' $MyVar
echo 'please enter a new string'
# requests user to enter a value
read MyVar
# can be used to indicate whether variable has been accepted
echo 'the current value of the variable is' $MyVar

# Reading multiple values
echo 'Enter two numbers separated by space(s)'
# asks for input of 2 values
read a b 
echo 'you entered' $a 'and' $b '. Their sum is:'
# adds the two entered numbers and sets them to the variable mysum
mysum= expr $a + $b
echo $mysum

# exits script
exit**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error:
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: CompileLaTeX.sh
# Desc: Compiles a pdf document (with bibliography) from a .tex file.
# Arguments: 1-> .tex file 
# Date: 08 Oct 2018

# Compiles pdf from .tex files and bibliography

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
# Opens pdf viewer
evince $1.pdf &

## Cleanup
# Removes extra files generated during compilation
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.blg
rm *.bbl**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.aux': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.log': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.blg': No such file or directory
rm: cannot remove '*.bbl': No such file or directory

** (evince:11360): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2018-19/Coursework/StudentRepos/KatherineBickerton_KB2018/Week1/Code/.pdf': No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

** (evince:11360): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: tiff2png.sh
# Desc: Converts tiff files to png files, using a for loop and imagemagick.
# Arguments: f-> .tiff file from command line
# Date: 07 Oct 2018

# for loop which converts each tiff file found to png files
for f in *.tif;
    do
        echo "Converting $f";
        convert "$f" "$(basename "$f" .tif).jpg";
    done
exit
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error:
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.jpg' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: csvtospace.sh
# Desc: Convert comma to space delimited files, via substitution of 
# commas for spaces, file taken from command line.
# Arguments: 1-> comma delimited file 
# Date: 08 Oct 2018

echo "Creating a space delimited version of $1"
# replaces commas with spaces for input file
cat $1 | tr -s "," " " >> $1.txt
echo "Done!"
exit**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a space delimited version of 
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00626s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Katie Bickerton}
\date{}
\begin{document}
    \maketitle

    \begin{abstract}
        This paper must be cool!
    \end{abstract}

    \section{Introduction}
        Blah blah

    \section{Materials \& Methods}
    One of the most famous equations is:
    \begin{equation}
        E = mc^2
    \end{equation}
    This equation was first proposed by Einstein in 1905
    \cite{einstein1905does}.

    \bibliographystyle{plain}
    \bibliography{FirstBiblio}
\end{document}**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: MyExampleScript.sh
# Desc: Exemplifies setting variables and returning within a string.
# Arguments: msg1,msg2 -> alphanumeric string
# Date: 07 Oct 2018

# set values of variables
msg1='Hello'
# $USER prints signifies name of user running script
msg2=$USER
# print variables, showing how same results can be produced by settingg
# variables and inputting directly into a string.
echo "$msg1 $msg2"
echo "Hello $USER"
# just command echo adds a blank line
echo

exit**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00555s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
author = {Einstein, A},
journal = {Annalen der Physik},
pages = {639--641},
title = {{Does the inertia of a body depend upon its energy-content?}},
volume = {18},
year = {1905}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#1 Count number of lines in each file
wc -l ../Data/{407228326.fasta,407228412.fasta,E.coli.fasta}
# where wc gives counts of a file, and -l specifies to count only number of lines

#2 Print everything starting from the second line 
tail -n +2 ../Data/E.coli.fasta
# tail prints the last lines of a file, and -n +2 specifies to start from the second line

#3 Count the sequence length of this genome
tail -n +2 ../Data/E.coli.fasta | wc -m
# still excluding the first line, wc -m counts the number of characters

#4 Count the matches of sequence "ATGC" in the genome of E.coli
tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "ATGC" | wc -l
# grep finds the occurences of the sequence in the file, which is converted into 1 line using tr -d "\n", and wc -l counts the number of occurences 

#5 Compute the AT/GC ratio
A=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "A" | wc -l) && T=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "T" | wc -l) && G=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "G" | wc -l) && C=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "C" | wc -l) && result=$(echo "($A+$T)/($G+$C)" | bc -l) && echo "$result"
# counts the number of each character and works out the ratio of AT to GC **********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: tabtocsv.sh
# Desc: Converts a tab delimited file to a comma delimited file (.csv) via substitution of tabs for commas.
# Arguments: 1 -> tab delimited file
# Date: 02 Oct 2018

echo "Creating a comma delimited version of $1 ..."
# cat to create new file, >> saves it to new file with name ending .csv
# tr replaces tabs in input file with commas
cat $1 | tr -s "\t" "," >> $1.csv
# states when completed
echo "Done!"
exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00771s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash 
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: boilerplate.sh
# Desc: A simple boilerplate exemplifying shell scripting.
# Arguments: none
# Date: 02 Oct 2018

echo -e "\nThis is a shell script! \n" #-e enables use of backslash commands, \n prints text on a new line

# exit
# if # is removed from above line will allow code to be stopped and can be used to generate error codes**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00395s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!