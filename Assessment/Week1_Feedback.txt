Starting weekly assessment for Katherine, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 1.59 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: Week1, Assessment, Week2, .git

Found the following files in parent directory: README.txt, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:
**********************************************************************
*~ 
*.tmp
**********************************************************************

Found README in parent directory, named: README.txt

Printing contents of README.txt:
**********************************************************************
My CMEE Coursework Repository
**********************************************************************

======================================================================
Looking for the weekly directories...

Found 2 weekly directories: Week1, Week2

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: Code, Data, Sandbox, Results

Found the following files: readme-week1.txt

Checking for readme file in weekly directory...

Found README in parent directory, named: readme-week1.txt

Printing contents of readme-week1.txt:
**********************************************************************
CMEE Course Work Week 1 Directory

This directory contains four directories:
    1. Code
    2. Data
    3. Results
    4. Sandbox

The Code contains unix code and shell scripts as described:
    *.sh files contain shell scripts in unix.
    boilerplate.sh is a basic test script.
    CompileLaTeX.sh produces a pdf file .pdf from a latex source file .tex and 
    inserts citations and bibliography from a .bib file.
    ConcatenateTwoFiles.sh merges two files.
    CountLines.sh counts the number of lines in a file.
    csvtospace.sh converts csv files to space delimited.
    tabtocsv.sh converts tab delimited files to csv files.
    tiff2png.sh converts .tif files and .png files.
    MyExampleScript.sh and variables.sh both demonstrate use of variables.
    UnixPrac1.txt contains solutions to unix practical tasks.

The Data directory contains files for testing the code scripts.
The Results directory contains the outputs from code scripts.
The Sandbox directory contains the practise and test files.**********************************************************************

Found following files in results directory: ...
Found 13 code files: ConcatenateTwoFiles.sh, .txt, CountLines.sh, variables.sh, CompileLaTeX.sh, tiff2png.sh, csvtospace.sh, FirstExample.tex, MyExampleScript.sh, FirstBiblio.bib, UnixPrac1.txt, tabtocsv.sh, boilerplate.sh

Found the following extra files: FirstExample.log, FirstExample.aux, FirstExample.pdf
0.5 pt deducted per extra file

Current Points = 98.5

======================================================================
Testing script/code files...

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: ConcatenateTwoFiles.sh
# Desc: Merge two files
# Arguments: 1,2-> files to be merged, 3-> output file
# Date: 07 Oct 2018

cat $1 > $3
cat $2 >> $3
echo "Merged File is"
cat $3

exit**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 

**********************************************************************
Merged File is

**********************************************************************

Encountered error:
ConcatenateTwoFiles.sh: line 8: $3: ambiguous redirect
ConcatenateTwoFiles.sh: line 9: $3: ambiguous redirect

======================================================================
Inspecting script file .txt...

File contents are:
**********************************************************************
**********************************************************************

Testing .txt...

======================================================================
Inspecting script file CountLines.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton@imperial.ac.uk
# Script: CountLines.sh
# Desc: Counts lines in a file
# Arguments: NumLines -> Number of lines, 1-> file
# Date: 07 Oct 2018

NumLines=`wc -l < $1`
echo "The file $1 has $NumLines lines"
echo

exit **********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 

**********************************************************************
The file  has  lines


**********************************************************************

Encountered error:
CountLines.sh: line 8: $1: ambiguous redirect

======================================================================
Inspecting script file variables.sh...

File contents are:
**********************************************************************
#!/bin/bash
# # Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: variables.sh
# Desc: demonstrating the use of single and multiple variables
# Arguments: MyVar -> string, a,b,mysum-> numerical values
# Date: 07 Oct 2018

#Shows the use of setting variables
MyVar='some string'
echo 'the current value of the variable is' $MyVar
echo 'please enter a new string'
read MyVar
echo 'the current value of the variable is' $MyVar

## Reading multiple values
echo 'Enter two numbers separated by space(s)'
read a b 
echo 'you entered' $a 'and' $b '. Their sum is:'
mysum= expr $a + $b
echo $mysum

exit**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 

**********************************************************************
the current value of the variable is some string
please enter a new string
the current value of the variable is
Enter two numbers separated by space(s)
you entered and . Their sum is:


**********************************************************************

Encountered error:
expr: syntax error

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Compiles pdf from .tex files and bibliography from .bib files

pdflatex $1.tex
pdflatex $1.tex
bibtex $1
pdflatex $1.tex
pdflatex $1.tex
# Opens pdf viewer
evince $1.pdf &

##Cleanup
# Removes extra files generated during compilation
rm *~
rm *.aux
rm *.dvi
rm *.log
rm *.nav
rm *.out
rm *.snm
rm *.toc
rm *.blg
rm *.bbl**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 

**********************************************************************
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(/usr/share/texlive/texmf-dist/tex/latex/tools/.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 81 language(s) loaded.
File ignored)
*
! Emergency stop.
<*> .tex
        
!  ==> Fatal error occurred, no output PDF file produced!
Transcript written on .log.
This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (pre
**********************************************************************

Encountered error:
bibtex: Need exactly one file argument.
Try `bibtex --help' for more information.
rm: cannot remove '*~': No such file or directory
rm: cannot remove '*.dvi': No such file or directory
rm: cannot remove '*.nav': No such file or directory
rm: cannot remove '*.out': No such file or directory
rm: cannot remove '*.snm': No such file or directory
rm: cannot remove '*.toc': No such file or directory
rm: cannot remove '*.blg': No such file or directory
rm: cannot remove '*.bbl': No such file or directory

** (evince:26704): WARNING **: Error when getting information for file '/home/mhasoba/Documents/Teaching/IC_CMEE/2018-19/Coursework/StudentRepos/KatherineBickerton_KB2018/Week1/Code/.pdf': No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

** (evince:26704): WARNING **: Error setting file metadata: No such file or directory

======================================================================
Inspecting script file tiff2png.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: tiff2png.sh
# Desc: convert tiff files to png files
# Arguments: f-> .tiff
# Date: 07 Oct 2018

# for loop which converts tiff files to png files
for f in *.tif;
    do
        echo "Converting $f";
        convert "$f" "$(basename "$f" .tif).jpg";
    done
exit
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 

**********************************************************************
Converting *.tif

**********************************************************************

Encountered error:
convert: unable to open image `*.tif': No such file or directory @ error/blob.c/OpenBlob/2712.
convert: no images defined `*.jpg' @ error/convert.c/ConvertImageCommand/3210.

======================================================================
Inspecting script file csvtospace.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: csvtospace.sh
# Desc: change csv to space delimited files, via substitution of commas for spaces
# Arguments: 1-> comma delimited file 
# Date: 08 Oct 2018

echo "Creating a space delimited version of $1"
# replaces commas with spaces
cat $1 | tr -s "," " " >> $1.txt
echo "Done!"
exit**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a space delimited version of 
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00738s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:
**********************************************************************
\documentclass[12pt]{article}
\title{A Simple Document}
\author{Katie Bickerton}
\date{}
\begin{document}
    \maketitle

    \begin{abstract}
        This paper must be cool!
    \end{abstract}

    \section{Introduction}
        Blah blah

    \section{Materials \& Methods}
    One of the most famous equations is:
    \begin{equation}
        E = mc^2
    \end{equation}
    This equation was first proposed by Einstein in 1905
    \cite{einstein1905does}.

    \bibliographystyle{plain}
    \bibliography{FirstBiblio}
\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file MyExampleScript.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: MyExampleScript.sh
# Desc: prints two part message saying hello to user
# Arguments: msg1,msg2 -> alphanumeric string
# Date: 07 Oct 2018

# set values of variables
msg1='Hello'
msg2=$USER
# print variables 
echo "$msg1 $msg2"
echo "Hello $USER"
echo

exit**********************************************************************

Testing MyExampleScript.sh...

Output (only first 500 characters): 

**********************************************************************
Hello mhasoba
Hello mhasoba


**********************************************************************

Code ran without errors

Time consumed = 0.00705s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:
**********************************************************************
@article{einstein1905does,
author = {Einstein, A},
journal = {Annalen der Physik},
pages = {639--641},
title = {{Does the inertia of a body depend upon its energy-content?}},
volume = {18},
year = {1905}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:
**********************************************************************
#1 Count number of lines in each file
wc -l ../Data/{407228326.fasta,407228412.fasta,E.coli.fasta}
# where wc gives counts of a file, and -l specifies to count only number of lines

#2 Print everything starting from the second line 
tail -n +2 ../Data/E.coli.fasta
# tail prints the last lines of a file, and -n +2 specifies to start from the second line

#3 Count the sequence length of this genome
tail -n +2 ../Data/E.coli.fasta | wc -m
# still excluding the first line, wc -m counts the number of characters

#4 Count the matches of sequence "ATGC" in the genome of E.coli
tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "ATGC" | wc -l
# grep finds the occurences of the sequence in the file, which is converted into 1 line using tr -d "\n", and wc -l counts the number of occurences 

#5 Compute the AT/GC ratio
A=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "A" | wc -l) && T=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "T" | wc -l) && G=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "G" | wc -l) && C=$(tail -n +2 ../Data/E.coli.fasta | tr -d "\n" | grep -o "C" | wc -l) && result=$(echo "($A+$T)/($G+$C)" | bc -l) && echo "$result"
# counts the number of each character and works out the ratio of AT to GC **********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:
**********************************************************************
#!/bin/bash
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: tabtocsv.sh
# Desc: substitute the tabs in the files with commas, saves the output into a .csv file
# Arguments: 1-> tab delimited file
# Date: 02 Oct 2018

echo "Creating a comma delimited version of $1 ..."
# Replace tabs with commas
cat $1 | tr -s "\t" "," >> $1.csv
echo "Done!"
exit**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 

**********************************************************************
Creating a comma delimited version of  ...
Done!

**********************************************************************

Code ran without errors

Time consumed = 0.00933s

======================================================================
Inspecting script file boilerplate.sh...

File contents are:
**********************************************************************
#!/bin/bash - tells interpreter this is a bash script
# Author: Katie Bickerton k.bickerton18@imperial.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: 02 Oct 2018

echo -e "\nThis is a shell script! \n" #-e enables use of backslash commands, \n prints text on a new line

# exit
# if # is removed from above line will allow code to be stopped and can be used to generate error codes**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 

**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00979s

======================================================================
======================================================================
Finished running scripts

Ran into 5 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 98.5

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!